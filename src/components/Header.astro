---
import { LINKS, SITE } from '@consts';
import ThemeController from '@components/ThemeController.astro';

function slugify(text: string) {
    if (text.toLowerCase() === 'home') {
        return '/';
    }
    return '/' + text.toLowerCase().replace(/\s+/g, '-');
}
---

<div class="navbar z-50 bg-base-100 shadow-sm">
    <!-- Start -->
    <div class="navbar-start">
        <!-- Mobile Dropdown -->
        <div class="dropdown">
            <div
                tabindex="0"
                role="button"
                aria-label="hamburger"
                class="btn btn-ghost lg:hidden"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    class="h-5 w-5"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M4 6h16M4 12h8m-8 6h16"></path>
                </svg>
            </div>
            <ul
                tabindex="0"
                class="menu dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 shadow"
            >
                {
                    LINKS.map((link) =>
                        link.SUBLINKS ? (
                            <li>
                                <details>
                                    <summary>{link.TITLE}</summary>
                                    <ul class="p-2">
                                        {link.SUBLINKS.map((sublink) => (
                                            <li>
                                                <a
                                                    href={slugify(
                                                        sublink.TITLE
                                                    )}
                                                >
                                                    {sublink.TITLE}
                                                </a>
                                            </li>
                                        ))}
                                    </ul>
                                </details>
                            </li>
                        ) : (
                            <li>
                                <a href={slugify(link.TITLE)}>{link.TITLE}</a>
                            </li>
                        )
                    )
                }
            </ul>
        </div>

        <!-- Brand Title -->
        <a class="text-xl" href="/">{SITE.TITLE}</a>
    </div>

    <!-- Center (Desktop Menu) -->
    <div class="navbar-center hidden lg:flex">
        <ul class="menu menu-horizontal px-1">
            {
                LINKS.map((link) =>
                    link.SUBLINKS ? (
                        <li>
                            <details>
                                <summary>{link.TITLE}</summary>
                                <ul class="p-2">
                                    {link.SUBLINKS.map((sublink) => (
                                        <li>
                                            <a href={slugify(sublink.TITLE)}>
                                                {sublink.TITLE}
                                            </a>
                                        </li>
                                    ))}
                                </ul>
                            </details>
                        </li>
                    ) : (
                        <li>
                            <a href={slugify(link.TITLE)}>{link.TITLE}</a>
                        </li>
                    )
                )
            }
        </ul>
    </div>

    <!-- End -->
    <div class="navbar-end gap-4">
        <ThemeController />
        <a class="btn" href="/contact">Contact Us</a>
    </div>
</div>

<script is:inline>
    // Prevent the FART effect (Flash of incorrect theme/icon)
    const savedTheme = localStorage.getItem('theme');

    const prefersDark = window.matchMedia(
        '(prefers-color-scheme: dark)'
    ).matches;
    const effectiveTheme = savedTheme || (prefersDark ? 'dark' : 'light');

    // Apply the theme early
    document.documentElement.setAttribute('data-theme', effectiveTheme);

    // Sync checkbox state based on effective theme
    const checkboxSetter = () => {
        const themeController = document.getElementById(
            'themeControllerWrapper'
        );
        const themeControllerCheckbox =
            document.querySelector('.theme-controller');

        if (themeControllerCheckbox) {
            themeControllerCheckbox.checked = effectiveTheme === 'dark';
            setTimeout(() => {
                // this will prevent flash of unstyled icon, remove no-anim class we applied to theme controller
                themeController?.classList.remove('no-anim');
            }, 100);
        } else {
            requestAnimationFrame(checkboxSetter);
        }
    };

    checkboxSetter();
</script>

<script>
    import { themeChange } from 'theme-change';
    themeChange();
    // ðŸ‘† you could import the CDN directly instead of these two lines
</script>

<style>
    .no-anim * {
        transition: none !important;
        transform: none !important;
    }
</style>
