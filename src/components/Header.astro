---
import { LINKS, SITE } from '@consts';
import ThemeController from '@components/ThemeController.astro';
import HamburgerMenu from '@components/HamburgerMenu.astro';
import slugify from '@utils/slugify';
---

<nav class="navbar fixed z-50 bg-base-100 transition-transform shadow">
    <!-- Start -->
    <div class="navbar-start gap-4">
        <!-- Brand Title -->
        <a class="text-xl" href="/">{SITE.TITLE}</a>
    </div>

    <!-- Center (Desktop Menu) -->
    <nav class="navbar-center hidden lg:flex">
        <ul class="menu menu-horizontal px-1">
            {
                LINKS.map((link) =>
                    link.SUBLINKS ? (
                        <li>
                            <details>
                                <summary>{link.TITLE}</summary>
                                <ul class="p-2">
                                    {link.SUBLINKS.map((sublink) => (
                                        <li>
                                            <a href={slugify(sublink.TITLE)}>
                                                {sublink.TITLE}
                                            </a>
                                        </li>
                                    ))}
                                </ul>
                            </details>
                        </li>
                    ) : (
                        <li>
                            <a href={slugify(link.TITLE)}>{link.TITLE}</a>
                        </li>
                    )
                )
            }
        </ul>
    </nav>

    <!-- End -->
    <div class="navbar-end gap-8">
        <ThemeController />
        <a class="btn hidden md:inline-flex" href="/contact">Contact Us</a>
        <HamburgerMenu />
    </div>
</nav>
<div class="h-[var(--h-header)]"></div>

<script is:inline>
    // Prevent the FART effect (Flash of incorrect theme/icon)
    const savedTheme = localStorage.getItem('theme');

    const prefersDark = window.matchMedia(
        '(prefers-color-scheme: dark)'
    ).matches;
    const effectiveTheme = savedTheme || (prefersDark ? 'dark' : 'light');

    // Apply the theme early
    document.documentElement.setAttribute('data-theme', effectiveTheme);

    // Sync checkbox state based on effective theme
    const checkboxSetter = () => {
        const themeController = document.getElementById(
            'themeControllerWrapper'
        );
        const themeControllerCheckbox =
            document.querySelector('.theme-controller');

        if (themeControllerCheckbox) {
            themeControllerCheckbox.checked = effectiveTheme === 'dark';
            setTimeout(() => {
                // this will prevent flash of unstyled icon, remove no-anim class we applied to theme controller
                themeController?.classList.remove('no-anim');
            }, 100);
        } else {
            requestAnimationFrame(checkboxSetter);
        }
    };

    checkboxSetter();
</script>

<script>
    import { themeChange } from 'theme-change';
    themeChange();
    // ðŸ‘† you could import the CDN directly instead of these two lines
</script>
<script is:inline>
    let lastScroll = 0;
    const nav = document.querySelector('.navbar');
    if (screen.width < 1028)
        window.addEventListener('scroll', () => {
            const currentScroll = window.pageYOffset;

            if (currentScroll > lastScroll && currentScroll > 100) {
                // scrolling down
                nav?.classList.add('translate-y-[-100%]');
            } else {
                // scrolling up
                nav?.classList.remove('translate-y-[-100%]');
            }

            lastScroll = currentScroll;
        });
</script>

<style>
    .no-anim * {
        transition: none !important;
        transform: none !important;
    }
</style>
