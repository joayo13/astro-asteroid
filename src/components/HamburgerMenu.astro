---
import { LINKS } from '@consts';
import '../styles/hamburger.css';
import slugify from '@utils/slugify';
---

<label class="hamburger-menu flex md:hidden">
    <input type="checkbox" />
</label>

<nav id="mobile-nav-links" class="fixed right-0 mt-[var(--h-header)]">
    <button
        id="mobile-nav-underlay"
        class="fixed duration-300 ease-in-out block bg-neutral opacity-0 inset-0 z-10 mt-[var(--h-header)] pointer-events-none"
    >
    </button>
    <ul
        id="mobile-nav-overlay"
        class="fixed pt-4 px-2 py-0 menu menu-xl duration-300 translate-x-full ease-in-out bg-base-200 z-20 right-0 w-1/2 h-full"
    >
        {
            LINKS.map((link) =>
                link.SUBLINKS ? (
                    <li>
                        <details>
                            <summary>{link.TITLE}</summary>
                            <ul>
                                {link.SUBLINKS.map((sublink) => (
                                    <li>
                                        <a href={slugify(sublink.TITLE)}>
                                            {sublink.TITLE}
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        </details>
                    </li>
                ) : (
                    <li>
                        <a href={slugify(link.TITLE)}>{link.TITLE}</a>
                    </li>
                )
            )
        }
        <div class="h-px w-full mt-4 bg-base-content opacity-50"></div>
    </ul>
</nav>

<script>
    const hamburger = document.querySelector(
        '.hamburger-menu input'
    ) as HTMLInputElement;
    const mobileMenuOverlay = document.querySelector(
        '#mobile-nav-overlay'
    ) as HTMLElement;
    const mobileMenuUnderlay = document.querySelector(
        '#mobile-nav-underlay'
    ) as HTMLElement;

    const toggleMobileMenu = () => {
        if (mobileMenuOverlay.classList.contains('translate-x-0')) {
            mobileMenuOverlay.classList.remove('no-doc-scroll');
            mobileMenuOverlay.classList.add('translate-x-full');
            mobileMenuOverlay.classList.remove('translate-x-0');
            mobileMenuUnderlay.classList.add('opacity-0');
            mobileMenuUnderlay.classList.add('pointer-events-none');
            mobileMenuUnderlay.classList.remove('opacity-50');
            hamburger.checked = false;
        } else {
            mobileMenuOverlay.classList.add('no-doc-scroll');
            mobileMenuOverlay.classList.remove('translate-x-full');
            mobileMenuOverlay.classList.add('translate-x-0');
            mobileMenuUnderlay.classList.remove('opacity-0');
            mobileMenuUnderlay.classList.remove('pointer-events-none');
            mobileMenuUnderlay.classList.add('opacity-50');
        }
    };

    hamburger.addEventListener('click', toggleMobileMenu);
    const mobileLinks = document.querySelectorAll('#mobile-link');
    mobileLinks.forEach((link) => {
        link.addEventListener('click', () => {
            toggleMobileMenu();
        });
    });
    mobileMenuUnderlay.addEventListener('click', () => {
        toggleMobileMenu();
    });
</script>

<script is:inline>
    let lastScroll = 0;
    let scrollUpCounter = 0;
    let scrollDownCounter = 0;
    const maxScrollAmount = 5;

    const nav = document.querySelector('.navbar');
    if (screen.width < 1028)
        window.addEventListener('scroll', () => {
            const currentScroll = window.pageYOffset;
            if (currentScroll > lastScroll) {
                // scrolling down
                if (
                    scrollDownCounter >= maxScrollAmount &&
                    currentScroll > 150
                ) {
                    nav?.classList.add('translate-y-[-100%]');
                    scrollUpCounter = 0;
                }
                scrollDownCounter += 1;
            }
            if (currentScroll < lastScroll) {
                if (scrollUpCounter >= maxScrollAmount) {
                    nav?.classList.remove('translate-y-[-100%]');
                    scrollDownCounter = 0;
                }
                scrollUpCounter += 1;
            }
            lastScroll = currentScroll;
        });
</script>
